# https://taskfile.dev

version: '2'

vars:
  Product: 'ardan'

tasks:
  default:
    cmds:
      - echo "{{.Product}}"
      - task: run
    desc: default task(run)
    silent: true
  
  run:
    desc: go run 
    deps: [res]
    cmds:
      - echo "go run"
      - go run main.go
    silent: true
  res:
    desc: embed files
    cmds:
      - echo "res generating..."
      - statik -src=./templates -include=*.*  -p=res -f
      - echo "res generated."
    silent: true

  release:
    desc: "release"
    deps: [res]
    cmds:
      - echo "release generating..."
      - go build -ldflags "-w -s -X github.com/teamlint/ardan/version.Version={{.GitCommit}}" -o ./release/{{.Product}}_{{.GitCommit}} ./main.go
      - echo "release {{.Product}}_{{.GitCommit}}."
    vars:
      GitCommit:
        sh: git describe --always --tags --dirty
    silent: true

  github:
    desc: "github release"
    deps: [res]
    cmds:
      - echo "github release generating..."
      - GOOS=darwin GOARCH=amd64 go build -ldflags "-w -s -X github.com/teamlint/ardan/version.Version={{.GitCommit}}" -o ./release/{{.Product}}_{{.GitCommit}}_mac ./main.go
      - GOOS=linux GOARCH=amd64 go build -ldflags "-w -s -X github.com/teamlint/ardan/version.Version={{.GitCommit}}" -o ./release/{{.Product}}_{{.GitCommit}}_linux ./main.go
      - GOOS=windows GOARCH=amd64 go build -ldflags "-w -s -X github.com/teamlint/ardan/version.Version={{.GitCommit}}" -o ./release/{{.Product}}_{{.GitCommit}}_windows.exe ./main.go
      - echo "github release {{.Product}}_{{.GitCommit}}."
    vars:
      GitCommit:
        sh: git describe --always --tags 
    silent: true


  version:
    desc: "version"
    cmds:
      - echo "current version:"
      - git describe --always --tags --dirty
    silent: true

  install:
    desc: "install"
    deps: [res]
    cmds:
      - echo "{{.Product}} install..."
      - go install -ldflags "-w -s -X github.com/teamlint/ardan/version.Version={{.GitCommit}}" 
      - echo "{{.Product}} {{.GitCommit}} is installed."
    vars:
      GitCommit:
        sh: git describe --always --tags --dirty
    silent: true

  clean:
    desc: "clean release files"
    cmds:
      - echo "cleaning..."
      - rm -rf ./release
      - echo "clean done."
    silent: true
