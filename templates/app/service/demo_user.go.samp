// Copyright {{year}} teamlint.com. All rights reserved.
// Code generated by ardan.

package {{.Setting.Service}}

import (
	"{{import .Setting.GoMod .Setting.Output .Setting.App .Setting.Model}}"
	"{{import .Setting.GoMod .Setting.Output .Setting.App .Setting.Model .Setting.Query}}"
	"{{import .Setting.GoMod .Setting.Output .Setting.App .Setting.Repository}}"
)

type DemoUserService interface {
	Add(item *{{.Setting.Model}}.DemoUser) error
	Save(item *{{.Setting.Model}}.DemoUser) error
	Get(id string) (*{{.Setting.Model}}.DemoUser, error) 
	GetByUsername(name string) (*{{.Setting.Model}}.DemoUser, error) 
	List() ([]*{{.Setting.Model}}.DemoUser, error)
	Paged(base *query.Base, q *query.DemoUser) ([]*{{.Setting.Model}}.DemoUser, int64, error)
	Delete(id string) error 
}
type demoUserService struct {
    repo *{{.Setting.Repository}}.DemoUserRepository
}

func NewDemoUserService(repo *{{.Setting.Repository}}.DemoUserRepository) DemoUserService {
	return &demoUserService{repo}
}

func (s *demoUserService) Add(item *{{.Setting.Model}}.DemoUser) error {
	return s.repo.Insert(nil, item)
}

func (s *demoUserService) Save(item *{{.Setting.Model}}.DemoUser) error {
	if item.ID != "" {
		return s.repo.Update(nil, item)
	}
	item.ID = {{.Setting.Model}}.NewID()
	return s.repo.Insert(nil, item)
}

func (s *demoUserService) Get(id string) (*{{.Setting.Model}}.DemoUser, error) {
	return s.repo.Get(nil, id, false)
}

func (s *demoUserService) GetByUsername(name string) (*{{.Setting.Model}}.DemoUser, error) {
	return s.repo.GetBy(nil, "username = ?", name)
}

func (s *demoUserService) List() ([]*{{.Setting.Model}}.DemoUser, error) {
	return s.repo.Find(nil)
}

func (s *demoUserService) Paged(base *query.Base, q *query.DemoUser) ([]*{{.Setting.Model}}.DemoUser, int64, error) {
	return s.repo.Paged(nil, base.DefaultOrderBy("id desc"), q)
}

func (s *demoUserService) Delete(id string) error {
	return s.repo.Delete(nil, id, false)
}
